// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: biconom/type/bonus.proto

package bonus_pb

import (
	currency "github.com/biconom/go-genproto/biconom/type/currency"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Turnover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Turnover_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to UniqueField:
	//	*Turnover_Template_
	//	*Turnover_Counter_
	UniqueField isTurnover_UniqueField `protobuf_oneof:"unique_field"`
}

func (x *Turnover) Reset() {
	*x = Turnover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover) ProtoMessage() {}

func (x *Turnover) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover.ProtoReflect.Descriptor instead.
func (*Turnover) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0}
}

func (x *Turnover) GetHeader() *Turnover_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *Turnover) GetUniqueField() isTurnover_UniqueField {
	if m != nil {
		return m.UniqueField
	}
	return nil
}

func (x *Turnover) GetTemplate() *Turnover_Template {
	if x, ok := x.GetUniqueField().(*Turnover_Template_); ok {
		return x.Template
	}
	return nil
}

func (x *Turnover) GetCounter() *Turnover_Counter {
	if x, ok := x.GetUniqueField().(*Turnover_Counter_); ok {
		return x.Counter
	}
	return nil
}

type isTurnover_UniqueField interface {
	isTurnover_UniqueField()
}

type Turnover_Template_ struct {
	Template *Turnover_Template `protobuf:"bytes,2,opt,name=template,proto3,oneof"`
}

type Turnover_Counter_ struct {
	Counter *Turnover_Counter `protobuf:"bytes,3,opt,name=counter,proto3,oneof"`
}

func (*Turnover_Template_) isTurnover_UniqueField() {}

func (*Turnover_Counter_) isTurnover_UniqueField() {}

type IncomePoolLimiter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *IncomePoolLimiter_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to UniqueField:
	//	*IncomePoolLimiter_Template_
	//	*IncomePoolLimiter_Counter_
	UniqueField isIncomePoolLimiter_UniqueField `protobuf_oneof:"unique_field"`
}

func (x *IncomePoolLimiter) Reset() {
	*x = IncomePoolLimiter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter) ProtoMessage() {}

func (x *IncomePoolLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1}
}

func (x *IncomePoolLimiter) GetHeader() *IncomePoolLimiter_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *IncomePoolLimiter) GetUniqueField() isIncomePoolLimiter_UniqueField {
	if m != nil {
		return m.UniqueField
	}
	return nil
}

func (x *IncomePoolLimiter) GetTemplate() *IncomePoolLimiter_Template {
	if x, ok := x.GetUniqueField().(*IncomePoolLimiter_Template_); ok {
		return x.Template
	}
	return nil
}

func (x *IncomePoolLimiter) GetCounter() *IncomePoolLimiter_Counter {
	if x, ok := x.GetUniqueField().(*IncomePoolLimiter_Counter_); ok {
		return x.Counter
	}
	return nil
}

type isIncomePoolLimiter_UniqueField interface {
	isIncomePoolLimiter_UniqueField()
}

type IncomePoolLimiter_Template_ struct {
	Template *IncomePoolLimiter_Template `protobuf:"bytes,2,opt,name=template,proto3,oneof"`
}

type IncomePoolLimiter_Counter_ struct {
	Counter *IncomePoolLimiter_Counter `protobuf:"bytes,3,opt,name=counter,proto3,oneof"`
}

func (*IncomePoolLimiter_Template_) isIncomePoolLimiter_UniqueField() {}

func (*IncomePoolLimiter_Counter_) isIncomePoolLimiter_UniqueField() {}

type Turnover_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TurnoverId   uint32 `protobuf:"varint,1,opt,name=turnover_id,json=turnoverId,proto3" json:"turnover_id,omitempty"`
	TurnoverName string `protobuf:"bytes,2,opt,name=turnover_name,json=turnoverName,proto3" json:"turnover_name,omitempty"`
}

func (x *Turnover_Header) Reset() {
	*x = Turnover_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Header) ProtoMessage() {}

func (x *Turnover_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Header.ProtoReflect.Descriptor instead.
func (*Turnover_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Turnover_Header) GetTurnoverId() uint32 {
	if x != nil {
		return x.TurnoverId
	}
	return 0
}

func (x *Turnover_Header) GetTurnoverName() string {
	if x != nil {
		return x.TurnoverName
	}
	return ""
}

type Turnover_Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlias    bool                 `protobuf:"varint,1,opt,name=is_alias,json=isAlias,proto3" json:"is_alias,omitempty"`
	Alias      *currency.Currency   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Currencies []*currency.Currency `protobuf:"bytes,3,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *Turnover_Template) Reset() {
	*x = Turnover_Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Template) ProtoMessage() {}

func (x *Turnover_Template) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Template.ProtoReflect.Descriptor instead.
func (*Turnover_Template) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Turnover_Template) GetIsAlias() bool {
	if x != nil {
		return x.IsAlias
	}
	return false
}

func (x *Turnover_Template) GetAlias() *currency.Currency {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *Turnover_Template) GetCurrencies() []*currency.Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type Turnover_Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlias    bool                      `protobuf:"varint,1,opt,name=is_alias,json=isAlias,proto3" json:"is_alias,omitempty"`
	Alias      *Turnover_Counter_Value   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Currencies []*Turnover_Counter_Value `protobuf:"bytes,3,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *Turnover_Counter) Reset() {
	*x = Turnover_Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Counter) ProtoMessage() {}

func (x *Turnover_Counter) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Counter.ProtoReflect.Descriptor instead.
func (*Turnover_Counter) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Turnover_Counter) GetIsAlias() bool {
	if x != nil {
		return x.IsAlias
	}
	return false
}

func (x *Turnover_Counter) GetAlias() *Turnover_Counter_Value {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *Turnover_Counter) GetCurrencies() []*Turnover_Counter_Value {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type Turnover_Counter_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *currency.Currency           `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Self     string                       `protobuf:"bytes,2,opt,name=self,proto3" json:"self,omitempty"`
	Team     *Turnover_Counter_Value_Team `protobuf:"bytes,3,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *Turnover_Counter_Value) Reset() {
	*x = Turnover_Counter_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Counter_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Counter_Value) ProtoMessage() {}

func (x *Turnover_Counter_Value) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Counter_Value.ProtoReflect.Descriptor instead.
func (*Turnover_Counter_Value) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Turnover_Counter_Value) GetCurrency() *currency.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Turnover_Counter_Value) GetSelf() string {
	if x != nil {
		return x.Self
	}
	return ""
}

func (x *Turnover_Counter_Value) GetTeam() *Turnover_Counter_Value_Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type Turnover_Counter_Value_Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  string                               `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Levels []*Turnover_Counter_Value_Team_Level `protobuf:"bytes,2,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *Turnover_Counter_Value_Team) Reset() {
	*x = Turnover_Counter_Value_Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Counter_Value_Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Counter_Value_Team) ProtoMessage() {}

func (x *Turnover_Counter_Value_Team) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Counter_Value_Team.ProtoReflect.Descriptor instead.
func (*Turnover_Counter_Value_Team) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *Turnover_Counter_Value_Team) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Turnover_Counter_Value_Team) GetLevels() []*Turnover_Counter_Value_Team_Level {
	if x != nil {
		return x.Levels
	}
	return nil
}

type Turnover_Counter_Value_Team_Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Turnover_Counter_Value_Team_Level) Reset() {
	*x = Turnover_Counter_Value_Team_Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turnover_Counter_Value_Team_Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turnover_Counter_Value_Team_Level) ProtoMessage() {}

func (x *Turnover_Counter_Value_Team_Level) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turnover_Counter_Value_Team_Level.ProtoReflect.Descriptor instead.
func (*Turnover_Counter_Value_Team_Level) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{0, 2, 0, 0, 0}
}

func (x *Turnover_Counter_Value_Team_Level) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Turnover_Counter_Value_Team_Level) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type IncomePoolLimiter_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimiterId   uint32 `protobuf:"varint,1,opt,name=limiter_id,json=limiterId,proto3" json:"limiter_id,omitempty"`
	LimiterName string `protobuf:"bytes,2,opt,name=limiter_name,json=limiterName,proto3" json:"limiter_name,omitempty"`
}

func (x *IncomePoolLimiter_Header) Reset() {
	*x = IncomePoolLimiter_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter_Header) ProtoMessage() {}

func (x *IncomePoolLimiter_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter_Header.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IncomePoolLimiter_Header) GetLimiterId() uint32 {
	if x != nil {
		return x.LimiterId
	}
	return 0
}

func (x *IncomePoolLimiter_Header) GetLimiterName() string {
	if x != nil {
		return x.LimiterName
	}
	return ""
}

type IncomePoolLimiter_Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlias    bool                                `protobuf:"varint,1,opt,name=is_alias,json=isAlias,proto3" json:"is_alias,omitempty"`
	Alias      *IncomePoolLimiter_Template_Value   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Currencies []*IncomePoolLimiter_Template_Value `protobuf:"bytes,3,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *IncomePoolLimiter_Template) Reset() {
	*x = IncomePoolLimiter_Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter_Template) ProtoMessage() {}

func (x *IncomePoolLimiter_Template) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter_Template.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter_Template) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1, 1}
}

func (x *IncomePoolLimiter_Template) GetIsAlias() bool {
	if x != nil {
		return x.IsAlias
	}
	return false
}

func (x *IncomePoolLimiter_Template) GetAlias() *IncomePoolLimiter_Template_Value {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *IncomePoolLimiter_Template) GetCurrencies() []*IncomePoolLimiter_Template_Value {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type IncomePoolLimiter_Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlias    bool                               `protobuf:"varint,1,opt,name=is_alias,json=isAlias,proto3" json:"is_alias,omitempty"`
	Alias      *IncomePoolLimiter_Counter_Value   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Currencies []*IncomePoolLimiter_Counter_Value `protobuf:"bytes,3,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *IncomePoolLimiter_Counter) Reset() {
	*x = IncomePoolLimiter_Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter_Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter_Counter) ProtoMessage() {}

func (x *IncomePoolLimiter_Counter) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter_Counter.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter_Counter) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1, 2}
}

func (x *IncomePoolLimiter_Counter) GetIsAlias() bool {
	if x != nil {
		return x.IsAlias
	}
	return false
}

func (x *IncomePoolLimiter_Counter) GetAlias() *IncomePoolLimiter_Counter_Value {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *IncomePoolLimiter_Counter) GetCurrencies() []*IncomePoolLimiter_Counter_Value {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type IncomePoolLimiter_Template_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency   *currency.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	LimitValue string             `protobuf:"bytes,2,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
}

func (x *IncomePoolLimiter_Template_Value) Reset() {
	*x = IncomePoolLimiter_Template_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter_Template_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter_Template_Value) ProtoMessage() {}

func (x *IncomePoolLimiter_Template_Value) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter_Template_Value.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter_Template_Value) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *IncomePoolLimiter_Template_Value) GetCurrency() *currency.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *IncomePoolLimiter_Template_Value) GetLimitValue() string {
	if x != nil {
		return x.LimitValue
	}
	return ""
}

type IncomePoolLimiter_Counter_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency     *currency.Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	CounterId    uint32             `protobuf:"varint,2,opt,name=counter_id,json=counterId,proto3" json:"counter_id,omitempty"`
	CounterValue string             `protobuf:"bytes,3,opt,name=counter_value,json=counterValue,proto3" json:"counter_value,omitempty"`
	LimitValue   string             `protobuf:"bytes,4,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
	FirstAt      uint32             `protobuf:"varint,5,opt,name=first_at,json=firstAt,proto3" json:"first_at,omitempty"`
	LastAt       uint32             `protobuf:"varint,6,opt,name=last_at,json=lastAt,proto3" json:"last_at,omitempty"`
}

func (x *IncomePoolLimiter_Counter_Value) Reset() {
	*x = IncomePoolLimiter_Counter_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_bonus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomePoolLimiter_Counter_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomePoolLimiter_Counter_Value) ProtoMessage() {}

func (x *IncomePoolLimiter_Counter_Value) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_bonus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomePoolLimiter_Counter_Value.ProtoReflect.Descriptor instead.
func (*IncomePoolLimiter_Counter_Value) Descriptor() ([]byte, []int) {
	return file_biconom_type_bonus_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *IncomePoolLimiter_Counter_Value) GetCurrency() *currency.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *IncomePoolLimiter_Counter_Value) GetCounterId() uint32 {
	if x != nil {
		return x.CounterId
	}
	return 0
}

func (x *IncomePoolLimiter_Counter_Value) GetCounterValue() string {
	if x != nil {
		return x.CounterValue
	}
	return ""
}

func (x *IncomePoolLimiter_Counter_Value) GetLimitValue() string {
	if x != nil {
		return x.LimitValue
	}
	return ""
}

func (x *IncomePoolLimiter_Counter_Value) GetFirstAt() uint32 {
	if x != nil {
		return x.FirstAt
	}
	return 0
}

func (x *IncomePoolLimiter_Counter_Value) GetLastAt() uint32 {
	if x != nil {
		return x.LastAt
	}
	return 0
}

var File_biconom_type_bonus_proto protoreflect.FileDescriptor

var file_biconom_type_bonus_proto_rawDesc = []byte{
	0x0a, 0x18, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x69, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x1b, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x07, 0x0a, 0x08, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x1a, 0x4e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x8b, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x1a, 0xd4, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0xab, 0x02, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x3d, 0x0a,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x1a, 0x9a, 0x01, 0x0a,
	0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x1a, 0x33, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xea, 0x07, 0x0a, 0x11, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12,
	0x3e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x46, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x4a, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x44, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x5c, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x32, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8f, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a,
	0xd4, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x3b, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_biconom_type_bonus_proto_rawDescOnce sync.Once
	file_biconom_type_bonus_proto_rawDescData = file_biconom_type_bonus_proto_rawDesc
)

func file_biconom_type_bonus_proto_rawDescGZIP() []byte {
	file_biconom_type_bonus_proto_rawDescOnce.Do(func() {
		file_biconom_type_bonus_proto_rawDescData = protoimpl.X.CompressGZIP(file_biconom_type_bonus_proto_rawDescData)
	})
	return file_biconom_type_bonus_proto_rawDescData
}

var file_biconom_type_bonus_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_biconom_type_bonus_proto_goTypes = []interface{}{
	(*Turnover)(nil),                          // 0: biconom.type.Turnover
	(*IncomePoolLimiter)(nil),                 // 1: biconom.type.IncomePoolLimiter
	(*Turnover_Header)(nil),                   // 2: biconom.type.Turnover.Header
	(*Turnover_Template)(nil),                 // 3: biconom.type.Turnover.Template
	(*Turnover_Counter)(nil),                  // 4: biconom.type.Turnover.Counter
	(*Turnover_Counter_Value)(nil),            // 5: biconom.type.Turnover.Counter.Value
	(*Turnover_Counter_Value_Team)(nil),       // 6: biconom.type.Turnover.Counter.Value.Team
	(*Turnover_Counter_Value_Team_Level)(nil), // 7: biconom.type.Turnover.Counter.Value.Team.Level
	(*IncomePoolLimiter_Header)(nil),          // 8: biconom.type.IncomePoolLimiter.Header
	(*IncomePoolLimiter_Template)(nil),        // 9: biconom.type.IncomePoolLimiter.Template
	(*IncomePoolLimiter_Counter)(nil),         // 10: biconom.type.IncomePoolLimiter.Counter
	(*IncomePoolLimiter_Template_Value)(nil),  // 11: biconom.type.IncomePoolLimiter.Template.Value
	(*IncomePoolLimiter_Counter_Value)(nil),   // 12: biconom.type.IncomePoolLimiter.Counter.Value
	(*currency.Currency)(nil),                 // 13: biconom.type.Currency
}
var file_biconom_type_bonus_proto_depIdxs = []int32{
	2,  // 0: biconom.type.Turnover.header:type_name -> biconom.type.Turnover.Header
	3,  // 1: biconom.type.Turnover.template:type_name -> biconom.type.Turnover.Template
	4,  // 2: biconom.type.Turnover.counter:type_name -> biconom.type.Turnover.Counter
	8,  // 3: biconom.type.IncomePoolLimiter.header:type_name -> biconom.type.IncomePoolLimiter.Header
	9,  // 4: biconom.type.IncomePoolLimiter.template:type_name -> biconom.type.IncomePoolLimiter.Template
	10, // 5: biconom.type.IncomePoolLimiter.counter:type_name -> biconom.type.IncomePoolLimiter.Counter
	13, // 6: biconom.type.Turnover.Template.alias:type_name -> biconom.type.Currency
	13, // 7: biconom.type.Turnover.Template.currencies:type_name -> biconom.type.Currency
	5,  // 8: biconom.type.Turnover.Counter.alias:type_name -> biconom.type.Turnover.Counter.Value
	5,  // 9: biconom.type.Turnover.Counter.currencies:type_name -> biconom.type.Turnover.Counter.Value
	13, // 10: biconom.type.Turnover.Counter.Value.currency:type_name -> biconom.type.Currency
	6,  // 11: biconom.type.Turnover.Counter.Value.team:type_name -> biconom.type.Turnover.Counter.Value.Team
	7,  // 12: biconom.type.Turnover.Counter.Value.Team.levels:type_name -> biconom.type.Turnover.Counter.Value.Team.Level
	11, // 13: biconom.type.IncomePoolLimiter.Template.alias:type_name -> biconom.type.IncomePoolLimiter.Template.Value
	11, // 14: biconom.type.IncomePoolLimiter.Template.currencies:type_name -> biconom.type.IncomePoolLimiter.Template.Value
	12, // 15: biconom.type.IncomePoolLimiter.Counter.alias:type_name -> biconom.type.IncomePoolLimiter.Counter.Value
	12, // 16: biconom.type.IncomePoolLimiter.Counter.currencies:type_name -> biconom.type.IncomePoolLimiter.Counter.Value
	13, // 17: biconom.type.IncomePoolLimiter.Template.Value.currency:type_name -> biconom.type.Currency
	13, // 18: biconom.type.IncomePoolLimiter.Counter.Value.currency:type_name -> biconom.type.Currency
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_biconom_type_bonus_proto_init() }
func file_biconom_type_bonus_proto_init() {
	if File_biconom_type_bonus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_biconom_type_bonus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Counter_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Counter_Value_Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turnover_Counter_Value_Team_Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter_Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter_Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter_Template_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_bonus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomePoolLimiter_Counter_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_biconom_type_bonus_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Turnover_Template_)(nil),
		(*Turnover_Counter_)(nil),
	}
	file_biconom_type_bonus_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*IncomePoolLimiter_Template_)(nil),
		(*IncomePoolLimiter_Counter_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_biconom_type_bonus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_biconom_type_bonus_proto_goTypes,
		DependencyIndexes: file_biconom_type_bonus_proto_depIdxs,
		MessageInfos:      file_biconom_type_bonus_proto_msgTypes,
	}.Build()
	File_biconom_type_bonus_proto = out.File
	file_biconom_type_bonus_proto_rawDesc = nil
	file_biconom_type_bonus_proto_goTypes = nil
	file_biconom_type_bonus_proto_depIdxs = nil
}
