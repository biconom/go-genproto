// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: biconom/type/ticket.proto

package ticket_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *Ticket_Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Details *Ticket_Details `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"` // подробные параметры билета
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetHeader() *Ticket_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Ticket) GetDetails() *Ticket_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

// TicketBucket: группа биллетов (стандарт, VIP и тд)
type TicketBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *TicketBlock_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *TicketBlock) Reset() {
	*x = TicketBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBlock) ProtoMessage() {}

func (x *TicketBlock) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBlock.ProtoReflect.Descriptor instead.
func (*TicketBlock) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *TicketBlock) GetHeader() *TicketBlock_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

// TicketBucket: группа биллетов (стандарт, VIP и тд)
type TicketBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *TicketBucket_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *TicketBucket) Reset() {
	*x = TicketBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBucket) ProtoMessage() {}

func (x *TicketBucket) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBucket.ProtoReflect.Descriptor instead.
func (*TicketBucket) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *TicketBucket) GetHeader() *TicketBucket_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type Ticket_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId uint32 `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"` // идентификатор билета
}

func (x *Ticket_Id) Reset() {
	*x = Ticket_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Id) ProtoMessage() {}

func (x *Ticket_Id) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Id.ProtoReflect.Descriptor instead.
func (*Ticket_Id) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Ticket_Id) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

type Ticket_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId       uint32                 `protobuf:"varint,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`                   // идентификатор билета
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                 // дата создания билета
	ExpiredValue   bool                   `protobuf:"varint,3,opt,name=expired_value,json=expiredValue,proto3" json:"expired_value,omitempty"`       // значение просрочености действия билета
	ExpiredSupport bool                   `protobuf:"varint,4,opt,name=expired_support,json=expiredSupport,proto3" json:"expired_support,omitempty"` // поддержка срока действия билета
	ExpiredAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`                 // дата завершения срока действия билета
	ActivatedValue bool                   `protobuf:"varint,6,opt,name=activated_value,json=activatedValue,proto3" json:"activated_value,omitempty"` // значение активации билета
	ActivatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=activated_at,json=activatedAt,proto3" json:"activated_at,omitempty"`           // дата активации билета
}

func (x *Ticket_Header) Reset() {
	*x = Ticket_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Header) ProtoMessage() {}

func (x *Ticket_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Header.ProtoReflect.Descriptor instead.
func (*Ticket_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Ticket_Header) GetTicketId() uint32 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *Ticket_Header) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticket_Header) GetExpiredValue() bool {
	if x != nil {
		return x.ExpiredValue
	}
	return false
}

func (x *Ticket_Header) GetExpiredSupport() bool {
	if x != nil {
		return x.ExpiredSupport
	}
	return false
}

func (x *Ticket_Header) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *Ticket_Header) GetActivatedValue() bool {
	if x != nil {
		return x.ActivatedValue
	}
	return false
}

func (x *Ticket_Header) GetActivatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ActivatedAt
	}
	return nil
}

type Ticket_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*Ticket_Details_Metadata
	Kind isTicket_Details_Kind `protobuf_oneof:"kind"`
}

func (x *Ticket_Details) Reset() {
	*x = Ticket_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Details) ProtoMessage() {}

func (x *Ticket_Details) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Details.ProtoReflect.Descriptor instead.
func (*Ticket_Details) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{0, 2}
}

func (m *Ticket_Details) GetKind() isTicket_Details_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Ticket_Details) GetMetadata() *anypb.Any {
	if x, ok := x.GetKind().(*Ticket_Details_Metadata); ok {
		return x.Metadata
	}
	return nil
}

type isTicket_Details_Kind interface {
	isTicket_Details_Kind()
}

type Ticket_Details_Metadata struct {
	Metadata *anypb.Any `protobuf:"bytes,100,opt,name=metadata,proto3,oneof"`
}

func (*Ticket_Details_Metadata) isTicket_Details_Kind() {}

type Ticket_Details_TV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ticket_Details_TV) Reset() {
	*x = Ticket_Details_TV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_Details_TV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_Details_TV) ProtoMessage() {}

func (x *Ticket_Details_TV) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_Details_TV.ProtoReflect.Descriptor instead.
func (*Ticket_Details_TV) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{0, 2, 0}
}

type TicketBlock_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to UniqueField:
	//	*TicketBlock_Id_BlockId
	//	*TicketBlock_Id_BlockName
	UniqueField isTicketBlock_Id_UniqueField `protobuf_oneof:"unique_field"`
}

func (x *TicketBlock_Id) Reset() {
	*x = TicketBlock_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBlock_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBlock_Id) ProtoMessage() {}

func (x *TicketBlock_Id) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBlock_Id.ProtoReflect.Descriptor instead.
func (*TicketBlock_Id) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{1, 0}
}

func (m *TicketBlock_Id) GetUniqueField() isTicketBlock_Id_UniqueField {
	if m != nil {
		return m.UniqueField
	}
	return nil
}

func (x *TicketBlock_Id) GetBlockId() uint32 {
	if x, ok := x.GetUniqueField().(*TicketBlock_Id_BlockId); ok {
		return x.BlockId
	}
	return 0
}

func (x *TicketBlock_Id) GetBlockName() string {
	if x, ok := x.GetUniqueField().(*TicketBlock_Id_BlockName); ok {
		return x.BlockName
	}
	return ""
}

type isTicketBlock_Id_UniqueField interface {
	isTicketBlock_Id_UniqueField()
}

type TicketBlock_Id_BlockId struct {
	BlockId uint32 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3,oneof"`
}

type TicketBlock_Id_BlockName struct {
	BlockName string `protobuf:"bytes,2,opt,name=block_name,json=blockName,proto3,oneof"`
}

func (*TicketBlock_Id_BlockId) isTicketBlock_Id_UniqueField() {}

func (*TicketBlock_Id_BlockName) isTicketBlock_Id_UniqueField() {}

type TicketBlock_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId   uint32 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	BlockName string `protobuf:"bytes,2,opt,name=block_name,json=blockName,proto3" json:"block_name,omitempty"`
}

func (x *TicketBlock_Header) Reset() {
	*x = TicketBlock_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBlock_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBlock_Header) ProtoMessage() {}

func (x *TicketBlock_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBlock_Header.ProtoReflect.Descriptor instead.
func (*TicketBlock_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{1, 1}
}

func (x *TicketBlock_Header) GetBlockId() uint32 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *TicketBlock_Header) GetBlockName() string {
	if x != nil {
		return x.BlockName
	}
	return ""
}

type TicketBucket_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketId uint32 `protobuf:"varint,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
}

func (x *TicketBucket_Id) Reset() {
	*x = TicketBucket_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBucket_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBucket_Id) ProtoMessage() {}

func (x *TicketBucket_Id) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBucket_Id.ProtoReflect.Descriptor instead.
func (*TicketBucket_Id) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TicketBucket_Id) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

type TicketBucket_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketId uint32 `protobuf:"varint,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *TicketBucket_Header) Reset() {
	*x = TicketBucket_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_ticket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketBucket_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketBucket_Header) ProtoMessage() {}

func (x *TicketBucket_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_ticket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketBucket_Header.ProtoReflect.Descriptor instead.
func (*TicketBucket_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_ticket_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TicketBucket_Header) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *TicketBucket_Header) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_biconom_type_ticket_proto protoreflect.FileDescriptor

var file_biconom_type_ticket_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x69, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x04, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x21, 0x0a,
	0x02, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x1a, 0xd1, 0x02, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x1a, 0x4b, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x04, 0x0a, 0x02, 0x54, 0x56, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x38, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x02, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x1a,
	0x42, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a,
	0x21, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x3b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_biconom_type_ticket_proto_rawDescOnce sync.Once
	file_biconom_type_ticket_proto_rawDescData = file_biconom_type_ticket_proto_rawDesc
)

func file_biconom_type_ticket_proto_rawDescGZIP() []byte {
	file_biconom_type_ticket_proto_rawDescOnce.Do(func() {
		file_biconom_type_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_biconom_type_ticket_proto_rawDescData)
	})
	return file_biconom_type_ticket_proto_rawDescData
}

var file_biconom_type_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_biconom_type_ticket_proto_goTypes = []interface{}{
	(*Ticket)(nil),                // 0: biconom.type.Ticket
	(*TicketBlock)(nil),           // 1: biconom.type.TicketBlock
	(*TicketBucket)(nil),          // 2: biconom.type.TicketBucket
	(*Ticket_Id)(nil),             // 3: biconom.type.Ticket.Id
	(*Ticket_Header)(nil),         // 4: biconom.type.Ticket.Header
	(*Ticket_Details)(nil),        // 5: biconom.type.Ticket.Details
	(*Ticket_Details_TV)(nil),     // 6: biconom.type.Ticket.Details.TV
	(*TicketBlock_Id)(nil),        // 7: biconom.type.TicketBlock.Id
	(*TicketBlock_Header)(nil),    // 8: biconom.type.TicketBlock.Header
	(*TicketBucket_Id)(nil),       // 9: biconom.type.TicketBucket.Id
	(*TicketBucket_Header)(nil),   // 10: biconom.type.TicketBucket.Header
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 12: google.protobuf.Any
}
var file_biconom_type_ticket_proto_depIdxs = []int32{
	4,  // 0: biconom.type.Ticket.header:type_name -> biconom.type.Ticket.Header
	5,  // 1: biconom.type.Ticket.details:type_name -> biconom.type.Ticket.Details
	8,  // 2: biconom.type.TicketBlock.header:type_name -> biconom.type.TicketBlock.Header
	10, // 3: biconom.type.TicketBucket.header:type_name -> biconom.type.TicketBucket.Header
	11, // 4: biconom.type.Ticket.Header.created_at:type_name -> google.protobuf.Timestamp
	11, // 5: biconom.type.Ticket.Header.expired_at:type_name -> google.protobuf.Timestamp
	11, // 6: biconom.type.Ticket.Header.activated_at:type_name -> google.protobuf.Timestamp
	12, // 7: biconom.type.Ticket.Details.metadata:type_name -> google.protobuf.Any
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_biconom_type_ticket_proto_init() }
func file_biconom_type_ticket_proto_init() {
	if File_biconom_type_ticket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_biconom_type_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_Details_TV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBlock_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBlock_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBucket_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_ticket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketBucket_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_biconom_type_ticket_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Ticket_Details_Metadata)(nil),
	}
	file_biconom_type_ticket_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*TicketBlock_Id_BlockId)(nil),
		(*TicketBlock_Id_BlockName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_biconom_type_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_biconom_type_ticket_proto_goTypes,
		DependencyIndexes: file_biconom_type_ticket_proto_depIdxs,
		MessageInfos:      file_biconom_type_ticket_proto_msgTypes,
	}.Build()
	File_biconom_type_ticket_proto = out.File
	file_biconom_type_ticket_proto_rawDesc = nil
	file_biconom_type_ticket_proto_goTypes = nil
	file_biconom_type_ticket_proto_depIdxs = nil
}
