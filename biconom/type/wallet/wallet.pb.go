// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: biconom/type/wallet.proto

package wallet_pb

import (
	payment_system "github.com/biconom/go-genproto/biconom/type/payment_system"
	until "github.com/biconom/go-genproto/biconom/type/until"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0}
}

type Wallet_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to UniqueField:
	//	*Wallet_ID_WalletId
	//	*Wallet_ID_WalletName
	UniqueField isWallet_ID_UniqueField `protobuf_oneof:"unique_field"`
}

func (x *Wallet_ID) Reset() {
	*x = Wallet_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet_ID) ProtoMessage() {}

func (x *Wallet_ID) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet_ID.ProtoReflect.Descriptor instead.
func (*Wallet_ID) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0, 0}
}

func (m *Wallet_ID) GetUniqueField() isWallet_ID_UniqueField {
	if m != nil {
		return m.UniqueField
	}
	return nil
}

func (x *Wallet_ID) GetWalletId() uint32 {
	if x, ok := x.GetUniqueField().(*Wallet_ID_WalletId); ok {
		return x.WalletId
	}
	return 0
}

func (x *Wallet_ID) GetWalletName() string {
	if x, ok := x.GetUniqueField().(*Wallet_ID_WalletName); ok {
		return x.WalletName
	}
	return ""
}

type isWallet_ID_UniqueField interface {
	isWallet_ID_UniqueField()
}

type Wallet_ID_WalletId struct {
	WalletId uint32 `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type Wallet_ID_WalletName struct {
	WalletName string `protobuf:"bytes,2,opt,name=wallet_name,json=walletName,proto3,oneof"`
}

func (*Wallet_ID_WalletId) isWallet_ID_UniqueField() {}

func (*Wallet_ID_WalletName) isWallet_ID_UniqueField() {}

type Wallet_PaymentSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet        *Wallet_ID                       `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	PaymentSystem *payment_system.PaymentSystem_ID `protobuf:"bytes,2,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
}

func (x *Wallet_PaymentSystem) Reset() {
	*x = Wallet_PaymentSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet_PaymentSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet_PaymentSystem) ProtoMessage() {}

func (x *Wallet_PaymentSystem) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet_PaymentSystem.ProtoReflect.Descriptor instead.
func (*Wallet_PaymentSystem) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Wallet_PaymentSystem) GetWallet() *Wallet_ID {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *Wallet_PaymentSystem) GetPaymentSystem() *payment_system.PaymentSystem_ID {
	if x != nil {
		return x.PaymentSystem
	}
	return nil
}

type Wallet_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId   uint32 `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	WalletName string `protobuf:"bytes,2,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	Published  bool   `protobuf:"varint,3,opt,name=published,proto3" json:"published,omitempty"`
}

func (x *Wallet_Header) Reset() {
	*x = Wallet_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet_Header) ProtoMessage() {}

func (x *Wallet_Header) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet_Header.ProtoReflect.Descriptor instead.
func (*Wallet_Header) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Wallet_Header) GetWalletId() uint32 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *Wallet_Header) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *Wallet_Header) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

type Wallet_PaymentSystem_BotKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId        uint32       `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PaymentSystemId uint32       `protobuf:"varint,2,opt,name=payment_system_id,json=paymentSystemId,proto3" json:"payment_system_id,omitempty"`
	BotKeyId        uint32       `protobuf:"varint,3,opt,name=bot_key_id,json=botKeyId,proto3" json:"bot_key_id,omitempty"`
	BotKeyTitle     string       `protobuf:"bytes,4,opt,name=bot_key_title,json=botKeyTitle,proto3" json:"bot_key_title,omitempty"`
	Token           string       `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Ttl             *until.Until `protobuf:"bytes,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	IpMasks         []string     `protobuf:"bytes,7,rep,name=ip_masks,json=ipMasks,proto3" json:"ip_masks,omitempty"`
}

func (x *Wallet_PaymentSystem_BotKey) Reset() {
	*x = Wallet_PaymentSystem_BotKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet_PaymentSystem_BotKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet_PaymentSystem_BotKey) ProtoMessage() {}

func (x *Wallet_PaymentSystem_BotKey) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet_PaymentSystem_BotKey.ProtoReflect.Descriptor instead.
func (*Wallet_PaymentSystem_BotKey) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Wallet_PaymentSystem_BotKey) GetWalletId() uint32 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *Wallet_PaymentSystem_BotKey) GetPaymentSystemId() uint32 {
	if x != nil {
		return x.PaymentSystemId
	}
	return 0
}

func (x *Wallet_PaymentSystem_BotKey) GetBotKeyId() uint32 {
	if x != nil {
		return x.BotKeyId
	}
	return 0
}

func (x *Wallet_PaymentSystem_BotKey) GetBotKeyTitle() string {
	if x != nil {
		return x.BotKeyTitle
	}
	return ""
}

func (x *Wallet_PaymentSystem_BotKey) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Wallet_PaymentSystem_BotKey) GetTtl() *until.Until {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *Wallet_PaymentSystem_BotKey) GetIpMasks() []string {
	if x != nil {
		return x.IpMasks
	}
	return nil
}

type Wallet_PaymentSystem_BotKey_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentSystem *payment_system.PaymentSystem_ID `protobuf:"bytes,1,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	BotKeyId      uint32                           `protobuf:"varint,2,opt,name=bot_key_id,json=botKeyId,proto3" json:"bot_key_id,omitempty"`
}

func (x *Wallet_PaymentSystem_BotKey_ID) Reset() {
	*x = Wallet_PaymentSystem_BotKey_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_biconom_type_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet_PaymentSystem_BotKey_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet_PaymentSystem_BotKey_ID) ProtoMessage() {}

func (x *Wallet_PaymentSystem_BotKey_ID) ProtoReflect() protoreflect.Message {
	mi := &file_biconom_type_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet_PaymentSystem_BotKey_ID.ProtoReflect.Descriptor instead.
func (*Wallet_PaymentSystem_BotKey_ID) Descriptor() ([]byte, []int) {
	return file_biconom_type_wallet_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Wallet_PaymentSystem_BotKey_ID) GetPaymentSystem() *payment_system.PaymentSystem_ID {
	if x != nil {
		return x.PaymentSystem
	}
	return nil
}

func (x *Wallet_PaymentSystem_BotKey_ID) GetBotKeyId() uint32 {
	if x != nil {
		return x.BotKeyId
	}
	return 0
}

var File_biconom_type_wallet_proto protoreflect.FileDescriptor

var file_biconom_type_wallet_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x69, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x21, 0x62, 0x69, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x05, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x1a, 0x56, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0xe0, 0x03, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x06, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x49, 0x44, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x1a, 0xd6, 0x02, 0x0a, 0x06, 0x42, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x6f, 0x74,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f,
	0x74, 0x4b, 0x65, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x25, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x70, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x70, 0x4d, 0x61, 0x73, 0x6b,
	0x73, 0x1a, 0x69, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x44, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c,
	0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x1a, 0x64, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x3b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_biconom_type_wallet_proto_rawDescOnce sync.Once
	file_biconom_type_wallet_proto_rawDescData = file_biconom_type_wallet_proto_rawDesc
)

func file_biconom_type_wallet_proto_rawDescGZIP() []byte {
	file_biconom_type_wallet_proto_rawDescOnce.Do(func() {
		file_biconom_type_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_biconom_type_wallet_proto_rawDescData)
	})
	return file_biconom_type_wallet_proto_rawDescData
}

var file_biconom_type_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_biconom_type_wallet_proto_goTypes = []interface{}{
	(*Wallet)(nil),                          // 0: biconom.type.Wallet
	(*Wallet_ID)(nil),                       // 1: biconom.type.Wallet.ID
	(*Wallet_PaymentSystem)(nil),            // 2: biconom.type.Wallet.PaymentSystem
	(*Wallet_Header)(nil),                   // 3: biconom.type.Wallet.Header
	(*Wallet_PaymentSystem_BotKey)(nil),     // 4: biconom.type.Wallet.PaymentSystem.BotKey
	(*Wallet_PaymentSystem_BotKey_ID)(nil),  // 5: biconom.type.Wallet.PaymentSystem.BotKey.ID
	(*payment_system.PaymentSystem_ID)(nil), // 6: biconom.type.PaymentSystem.ID
	(*until.Until)(nil),                     // 7: biconom.type.Until
}
var file_biconom_type_wallet_proto_depIdxs = []int32{
	1, // 0: biconom.type.Wallet.PaymentSystem.wallet:type_name -> biconom.type.Wallet.ID
	6, // 1: biconom.type.Wallet.PaymentSystem.payment_system:type_name -> biconom.type.PaymentSystem.ID
	7, // 2: biconom.type.Wallet.PaymentSystem.BotKey.ttl:type_name -> biconom.type.Until
	6, // 3: biconom.type.Wallet.PaymentSystem.BotKey.ID.payment_system:type_name -> biconom.type.PaymentSystem.ID
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_biconom_type_wallet_proto_init() }
func file_biconom_type_wallet_proto_init() {
	if File_biconom_type_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_biconom_type_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet_PaymentSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet_PaymentSystem_BotKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_biconom_type_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet_PaymentSystem_BotKey_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_biconom_type_wallet_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Wallet_ID_WalletId)(nil),
		(*Wallet_ID_WalletName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_biconom_type_wallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_biconom_type_wallet_proto_goTypes,
		DependencyIndexes: file_biconom_type_wallet_proto_depIdxs,
		MessageInfos:      file_biconom_type_wallet_proto_msgTypes,
	}.Build()
	File_biconom_type_wallet_proto = out.File
	file_biconom_type_wallet_proto_rawDesc = nil
	file_biconom_type_wallet_proto_goTypes = nil
	file_biconom_type_wallet_proto_depIdxs = nil
}
